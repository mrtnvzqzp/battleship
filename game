#set up game
P1w = False
P2w = False
turn = "p1"
slist = [5, 4, 3, 3, 2]
en = ["Carrier (5)", "Battleship (4)", "Cruiser (3)", "Submarine (3)", "Destroyer (2)"]

sl = [0, 1, 2, 3, 4]


# boards

def board():
    B = [[0, "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" ]]
    i = 1
    while i < 11:
        B.append([i, " ", " ", " ", " ", " ", " ", " ", " ", " ", " "])
        i += 1
    return B


P1S = board()
P1A = board()
P2S = board()
P2A = board()

#display



def display(S, sign):
    print(sign)
    for i in S:
        print(i)

def boardn():
    N = [["N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N"]]
    i = 1
    while i < 11:
        N.append(["N", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "N"])
        i += 1
    N.append(["N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N"])
    return N

P1N = boardn()
P2N = boardn()

# input
# checkship

# gri
def same(check):
    c = check[0]
    samecheck = True
    for i in check:
        if i != c:
            samecheck = False
    return samecheck


def checkstep(thing):
    check = False
    diff = int(thing[1]) - int(thing[0])
    if diff != 0:
        check = True
    i = 1
    while i < len(thing):
        if int(thing[i]) - int(thing[i - 1]) != diff:
            check = False
        i += 1
    return check


def gri(inp):
    shipx = inp[::2]
    shipy = inp[1::2]

    if (same(shipx) and checkstep(shipy)) or (same(shipy) and checkstep(shipx)):
        return True

    else:
        return False

    # allowed


def allowed(inp, N):
    alll = True
    i = 0
    while i < len(inp):
        if N[int(inp[i])][int(inp[i + 1])] == "N":
            alll = False
        i += 2
    return alll


def checkship(inp, life, N):
    if life == len(inp) / 2 and gri(inp) == True and allowed(inp, N) == True:
        return True
    else:
        return False

#procesship
def stringtoint(strin):
    intl = []
    for i in strin:
        intl.append(int(i))
    return intl


def processship(inp, life):
    shipcoor = []
    inpu = stringtoint(inp)
    shipx = inpu[::2]
    shipy = inpu[1::2]
    i = 0
    while i < life:
        inc = [shipx[i], shipy[i]]
        shipcoor.append(inc)
        i += 1
    pship = [life, shipcoor, shipx, shipy]
    return pship
#NNN

def setb(ss, su):
    ss.append(ss[0])
    ss.append(ss[0])
    diff = su[1] - su[0]
    su.insert(0, su[0] - diff)
    su.append(su[-1] + diff)

def NNN(pship, N):
    sx = pship[2]
    sy = pship[3]
    if same(sx):
        setb(sx, sy)
    elif same(sy):
        setb(sy, sx)
    i = 0
    while i < len(sx):
        N[sx[i]][sy[i]] = "N"
        i += 1



# input ship
def inship(i, P):
    if P == "P1":
        B = P1S
        N = P1N
    else:
        B = P2S
        N = P2N

    ent = en[i]
    life = slist[i]


    ship = input(P + " " + ent + ":")
    inp = ship.split(" ")
    while checkship(inp, life, N) == False:
        ship = input(ent + ":")
        inp = ship.split(" ")

    pship = processship(inp, life)
    for c in pship[1]:
        B[c[0]][c[1]] = i


    NNN(pship, N)

    return B, N



def startgame(P1S, P2S, P1N, P2N):
    i = 0
    while i < 5:
        P1S, P1N = inship(i, "P1")
        display(P1S, "p1 ships")

        i += 1

    i = 0
    while i < 5:
        P2S, P2N = inship(i, "P2")
        display(P2S, "p2 ships")

        i += 1

    return P1S, P2S, P1N, P2N




#attack
# attack
def attack(fire, B, C, player):
    print("a")

    ff = fire.split(" ")
    target = B[int(ff[0])][int(ff[1])]
    print("b")
    if target in sl:
        #add score
        B[int(ff[0])][int(ff[1])] = "X"
        C[int(ff[0])][int(ff[1])] = "X"
        print("hit")
        player[target] -= 1
        if player[target] == 0:
            print("ship sank")

    elif target == " ":
        B[int(ff[0])][int(ff[1])] = "V"
        C[int(ff[0])][int(ff[1])] = "V"
        print("miss")

#checkgame
def checkgame(p,q):
    if p == [0, 0, 0, 0, 0] or q == [0, 0, 0, 0, 0]:
        return False
    else:
        return True

#play game
game = True
p1list = [5, 4, 3, 3, 2]
p2list = [5, 4, 3, 3, 2]
P1S, P2S, P1N, P2N = startgame(P1S, P2S, P1N, P2N)
while game == True:

    if turn == "p1":

        display(P1S, "p1 ships")
        display(P1A, "p1 target")
        fire = input("p1 attack:")
        attack(fire, P2S, P1A, p2list)
        display(P1A, "p1 target")
        turn = "p2"
    else:

        display(P2S, "p2 ships")
        display(P2A, "p2 target")
        fire = input("p2 attack:")
        attack(fire, P1S, P2A, p1list)
        display(P2A, "p2 target")
        turn = "p1"
    game = checkgame(p1list, p2list)
print("game over")



